@using KendoUI.Northwind.Dashboard.Models;


<style>
    #dateFilter {
        float: right;
    }
    #EmployeesList { 
        background-color: #EEEEEE;
    }
    #leftColumn {
         width: 20%;
         background-color: #EEEEEE;
    }
    #rightColumn {
         width: 80%;
    }
    .employee {
        display: block; 
        padding: 2px;
    }
    /*.k-scheduler-monthview .k-scheduler-table td {
        height:60px !important; 
    }*/
    #employeeDetails {
        background-color: #FDFDFE; 
    
    }
    #employeeBio {
        height: 200px;
        background-color: #FDFDFE; 
    }
    #employeeStats {
        height: 200px;
    }
    .col {
        float: left;
    }
    .bio {
        float: left;
        width: 33%;
    }
    #employeeAbout {
        height: 200px;
    
    }
    #sparkline-container {  
        width: 200px;
    }
    #EmployeeQuarterSalesLabel {
        font-size: 24px;
    }
    #EmployeeAverageSalesLabel {
        font-size: 24px;
    }
</style>

<script type="text/x-kendo-tmpl" id="employeeItemTemplate">
    <div class="employee">
        <img src="@(Url.Content("~/content/employees/"))#:EmployeeID#-t.png" /> 
        <span>#:FirstName#</span> <span>#:LastName#</span> <br>
        <span>#:Title#</span>
    </div> 
</script>

<script type="text/x-kendo-tmpl" id="employeeBioTemplate">
    <div class="bio">
        ABOUT <br>
        <img src="@(Url.Content("~/content/employees/"))#:EmployeeID#.png" /> 
        <span>#:FirstName#</span> <span>#:LastName#</span> <br>
        <span>#:Title#</span>
        <a href='\\#' class='bioTooltip'> >>FULL BIO <span style='display:none;'>#:Notes#</span> </a>
    </div> 
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#TeamEfficiency").addClass("active");
    });

    function onListDataBound(e) {
        this.select($(".employee:first"));
    }
    function onListChange(e) {
        var employee = this.dataSource.getByUid(this.select().attr("data-uid")),
            employeeQuarterSales = $("#EmployeeQuarterSales").data("kendoSparkline"),
            employeeAverageSales = $("#EmployeeAverageSales").data("kendoSparkline"),
            teamSales = $("#TeamSales").data("kendoChart"),
            employeeSales = $("#EmployeeSales").data("kendoScheduler"),
            fromDate = $("#FromDate").data("kendoDatePicker"),
            endDate = $("#EndDate").data("kendoDatePicker"),
            filter = { EmployeeID: employee.EmployeeID, fromDate: fromDate.value(), endDate: endDate.value() },
            template = kendo.template($("#employeeBioTemplate").html());
        
        $("#employeeBio").html(template(employee));
        
        employeeSales.dataSource.filter({ field: "EmployeeID", operator: "eq", value: employee.EmployeeID });

        teamSales.dataSource.read(filter);
        //get the totals from the same action method?
        employeeQuarterSales.dataSource.read(filter);
        employeeAverageSales.dataSource.read(filter);
    }
    function getBio(e) {
        return e.target.find("span").text();
    }
    function onQuarterSalesDataBound(e) {
        var data = this.dataSource.at(0);
        $("#EmployeeQuarterSalesLabel").text(kendo.toString(data.Current,"c0"));
    }
    function onAverageSalesDataBound(e) { 
        //var data = this.dataSource.aggregates().EmployeeSales.average;
        //$("#EmployeeAverageSalesLabel").text(kendo.toString(data, "c0"));
    }

</script>

@(Html.Kendo().Tooltip()
    .For("#employeeBio") 
    .Filter("a")
    .ContentHandler("getBio")
)
<div id="header">
    <div><h1>TEAM EFFICIENCY</h1></div>    
    <div id="dateFilter">
        <label for="FromDate">STATS FROM:</label>
        @(Html.Kendo().DatePicker() 
            .Name("FromDate")
            .Value(new DateTime(1996, 7, 1))
        )
        <label for="EndDate">TO:</label>
        @(Html.Kendo().DatePicker() 
            .Name("EndDate")
            .Value(new DateTime(1997, 7, 1))
        )
    </div>
    <div style="clear:both;"></div>
</div>
<div id="leftColumn" class="col">
    TEAM MEMBERS<br />
    @(Html.Kendo().ListView<EmployeeViewModel>()
        .Name("EmployeesList") 
        .TagName("div")
        .Events(e=>e.DataBound("onListDataBound").Change("onListChange"))
        .ClientTemplateId("employeeItemTemplate")
        .DataSource(dataSource => {
            dataSource.Read(read => read.Action("EmployeesList", "Team"));
            dataSource.PageSize(10);
        }) 
        .Selectable(s=>s.Mode(ListViewSelectionMode.Single))
    )
</div>
<div id="rightColumn"class="col">
    <div id="employeeDetails">
        <div id="employeeAbout"> 
            <div id="employeeBio" class="bio">
            </div>
            <div class="bio">
                QUARTER TO DATE SALES<br>
                <span id="EmployeeQuarterSalesLabel"></span>
                <div class="sparkline-container">
                    @(Html.Kendo().Sparkline<QuarterToDateSalesViewModel>()
                        .Name("EmployeeQuarterSales")
                        .Theme("metro")
                        .AutoBind(false)
                        .Events(e=>e.DataBound("onQuarterSalesDataBound"))
                        .DataSource(ds => ds
                            .Read(read => read.Action("EmployeeQuarterSales", "Team"))
                        ) 
                        .Series(series =>
                        {
                            series.Bullet(m => m.Current, m => m.Target);
                        })
                        .ChartArea(a=>a.Width(200)) 
                        .CategoryAxis(c=>c
                            .Date() 
                            .Categories(x=>x.OrderDate) 
                            .BaseUnit(ChartAxisBaseUnit.Months)
                        )
                    )
                </div>
            </div>
            <div class="bio">
                MONTLY AVERAGE SALES<br>
                <span id="EmployeeAverageSalesLabel"></span>
                <div class="sparkline-container">
                    @(Html.Kendo().Sparkline<SalesStatsViewModel>()
                        .Name("EmployeeAverageSales")
                        .Theme("metro")
                        .AutoBind(false)                        
                        .Events(e=>e.DataBound("onAverageSalesDataBound"))
                        .DataSource(ds => ds
                            .Aggregates(a=>a.Add(m=>m.EmployeeSales).Average())
                            .Read(read => read.Action("EmployeeAverageSales", "Team"))
                        ) 
                        .Series(series =>
                        {
                            series.Line(model => model.EmployeeSales).Width(1.5); 
                        }) 
                        .ChartArea(a=>a.Width(200))
                        .CategoryAxis(c=>c
                            .Date()
                            .Categories(x=>x.Date) 
                            .BaseUnit(ChartAxisBaseUnit.Months)
                        )
                    )
                </div> 
            </div>  
        </div>
        <div id="employeeStats">
            @(Html.Kendo().Chart<SalesStatsViewModel>()
                .Name("TeamSales")
                .Theme("metro")
                .HtmlAttributes(new {style = "height:200px;" } )
                .AutoBind(false)
                .Legend(l=>l.Position(ChartLegendPosition.Bottom))
                .DataSource(ds => ds.Read(read => read.Action("EmployeeAndTeamSales", "Team")))
                .Series(series =>
                {
                    series.Column(model => model.EmployeeSales, categoryExpression: model => model.Date).Name("Employee Sales").Aggregate(ChartSeriesAggregate.Sum);
                    series.Column(model => model.TotalSales, categoryExpression: model => model.Date).Name("Team Sales").Aggregate(ChartSeriesAggregate.Sum);
                })
                .CategoryAxis(axis => axis
                    .Date()
                    .BaseUnit(ChartAxisBaseUnit.Months)
                    .Labels(labels => labels.Rotation(-90))
                    .MajorGridLines(lines => lines.Visible(false))
                )
                .ValueAxis(axis => axis.Numeric()
                    .Labels(labels => labels.Format("{0:N0}"))
                    .MajorUnit(5000)
                    .Line(line => line.Visible(false))
                )
                .Tooltip(tooltip => tooltip
                    .Visible(true)
                    .Format("{0:N0}")
                )
            )
        </div>
        <div id="employeeSchedule">
            @(Html.Kendo().Scheduler<SaleViewModel>()
                .Name("EmployeeSales")
                .AutoBind(false)
                .Date(new DateTime(1996, 7, 1))
                .Views(views =>
                {
                    views.MonthView();
                })
                .Editable(false)
                .Timezone("Etc/UTC")
                .Resources(resource =>
                {
                    resource.Add(m => m.EmployeeID)
                        .Title("Employee") 
                        .DataTextField("EmployeeName")
                        .DataValueField("EmployeeID") 
                        .DataSource(dataSource => {
                            dataSource.Read(read => read.Action("EmployeesList", "Team"));
                        });
                })
                .DataSource(d => d.Read("EmployeeSales", "Team"))
            )
        </div>
    </div>
</div>